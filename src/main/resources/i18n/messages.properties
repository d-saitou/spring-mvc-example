# All screens common messages
header.text.title = Spring MVC example
header.label.user = User
header.button.logout = Logout
common.msg.403 = You are not authorized to access this page.
common.format.date = MM-dd-uuuu
common.format.datetime = MM-dd-uuuu HH:mm:ss
common.format.datepicker = mm-dd-yy
common.button.search = Search
common.button.register = Register
common.button.update = Update
common.button.delete = Delete
common.button.reset = Reset
common.button.add = Add
common.button.return = Return
common.button.upload = Upload
common.button.first = First
common.button.prev = Prev
common.button.next = Next
common.button.last = Last
common.label.item.all = All
common.label.item.completed = completed
common.label.item.incomplete = incomplete

# Login screen
login.button.login = Login
login.msg.request = Please login
login.msg.regist_user = User registration
login.msg.auth-failure = Wrong user or password

# User registration screen
UserRegist.title = User registration
UserRegist.label.userId = User ID:
UserRegist.label.userName = User name:
UserRegist.label.password = Password:
UserRegist.label.retypepassword = Retype password:
UserRegist.label.emailAddress1 = Email address 1:
UserRegist.label.emailAddress2 = Email address 2:
UserRegist.label.gender = Gender:
UserRegist.label.gender.men = Men
UserRegist.label.gender.women = Women
UserRegist.label.dateOfBirth = Date of birth:
UserRegist.label.nationality = Nationality(multiple):
UserRegist.label.nationality.jp = Japan
UserRegist.label.nationality.us = United States
UserRegist.label.address = Address:
UserRegist.label.creditCardNo = Credit card No:
UserRegist.label.creditExpirationDate = Credit expiration date:
UserRegist.label.passwordHint = Password hint:
UserRegist.label.passwordHint.born = Where were you born?
UserRegist.label.passwordHint.pet = What was the name of your first pet?
UserRegist.label.passwordHintAnswer = Answer:
UserRegist.label.sessionTimeout = Auto logout(sec):
UserRegist.label.emailNewsletter = Email newsletter:
UserRegist.label.emailNewsletter.check1 = Receive with email address 1
UserRegist.label.emailNewsletter.check2 = Receive with email address 2
UserRegist.label.agree = Agree to Terms.
UserRegist.msg.error.notMatchPassword = Passwords do not match.
UserRegist.msg.error.notAgree = Requires agreement with terms.

# File upload screen
FileUpload.title = File upload
FileUpload.label.singleFile = Single file
FileUpload.label.multipleFiles = Multiple files
FileUpload.msg.complete = File upload is complete.
FileUpload.msg.notSelect = No file is selected.

# File download messages
FileDownload.title = File download (Excel)
FileDownload.msg.failed = File download failed.
FileDownload.label.excel.taskId = ID
FileDownload.label.excel.title = Title
FileDownload.label.excel.scheduledDate = Scheduled date
FileDownload.label.excel.completion = Completion
FileDownload.label.excel.description = Description
FileDownload.label.excel.userId = User ID

# Task create screen
TaskCreate.title = Task create

# Task list screen
TaskList.title = Task list
TaskList.label.taskId = ID
TaskList.label.title = title
TaskList.label.scheduledDate = scheduled date
TaskList.label.scheduledDate.minDate = scheduled date (start)
TaskList.label.scheduledDate.maxDate = scheduled date (end)
TaskList.label.completion = completion
TaskList.label.description = description
TaskList.label.update = update
TaskList.label.delete = delete

# Task update screen
TaskUpdate.title = Task update

# Task bulk update screen
TaskBulkUpdate.title = Task bulk update

# Task list (using API) screen
TaskListApiPage.title = Task list (using API)

# Send mail (asynchronous processing) screen
SendEmail.title = Send mail (asynchronous processing)
SendEmail.label.from = From:
SendEmail.label.to = To: *send to multiple destinations separated by commas. (asynchronous processing for each destination)
SendEmail.label.subject = Subject:
SendEmail.label.body = Body:
SendEmail.button.send = Send
SendEmail.msg.success = Succeeded to send mail.
SendEmail.msg.failed  = Failed to send mail.

# Exception handling test (@ExceptionHandler)
ExceptionHandlingNullPointerException.text.title = Exception handling (@ExceptionHandler)

# Exception handling test (HandlerExceptionResolver)
ExceptionHandlingIllegalArgumentException.text.title = Exception handling (HandlerExceptionResolver)

# Scheduled task history screen
ScheduledTaskHistory.title = Scheduled task history
ScheduledTaskHistory.label.id = ID
ScheduledTaskHistory.label.method = method
ScheduledTaskHistory.label.message = message
ScheduledTaskHistory.label.createdDate = created date

# Scheduled task history (inaccessible)
ScheduledTaskHistoryInaccessible.title = Scheduled task history (inaccessible)

# User list screen
UserList.title = User list
UserList.label.userId = User ID
UserList.label.userName = User name
UserList.label.emailAddress1 = Mail address 1
UserList.label.emailAddress2 = Mail address 2
UserList.label.enable = Enable
UserList.msg.error.readonly = This user is read-only.
